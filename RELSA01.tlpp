#Include "TOTVS.ch"

#define ENTER CHR(13)+CHR(10)

//  FUNÇÃO PRINCIPAL
User Function RELSA01()
    Private cPerg := "RELSA01"
    Private cNextAlias := GetNextAlias()

    fValidPerg(cPerg)

    If fPergunte(cPerg, .T.)
        oReport := fReportDef()
        oReport :PrintDialog()
    Endif
Return

// APRESENTAÇÃO DE DADOS
Static Function ReportDef()
    oReport := TReport():New(cPerg, "Relatório de Produtos por Grupo", cPerg, {|oReport| ReportPrint(oReport)}, "Impressão de relatório de Produtos por Grupo")
    oReport:SetLandscape(.T.)
    oReport:HideParamPage()

    oSection := TRSection():New(oReport, OEMToAnsi("Relatório de Produtos por Grupo"),{"SB1"})
    TRCell():New(oSection, "BM_GRUPO", cNextAlias, "Código do Grupo", /*Picture*/, /*Tamanho*/, /*lPixel*/,  /*{|| }}*/)
    TRCell():New(oSection, "B1_COD", cNextAlias, "Codigo do Produto", /*Picture*/, /*Tamanho*/, /*lPixel*/,  /*{|| }}*/)
    TRCell():New(oSection, "B1_FILIAL", cNextAlias, "Filial", /*Picture*/, /*Tamanho*/, /*lPixel*/,  /*{|| }}*/)
    TRCell():New(oSection, "B1_DESC", cNextAlias, "Descrição do Produto", /*Picture*/, /*Tamanho*/, /*lPixel*/,  /*{|| }}*/)
    TRCell():New(oSection, "BM_DESC", cNextAlias, "Descrição do Grupo", /*Picture*/, /*Tamanho*/, /*lPixel*/,  /*{|| }}*/)
Return oReport

// FUNÇÃO DE CONSULTAS
Static Function ReportPrint()
    Local oSection := oReport:Section(1)
    Local cQuery := ""
    Local nCount := 0

    cQuery += "SELECT TOP 200" + ENTER
    cQuery +=  "SB1.B1_FILIAL" + ENTER
    cQuery +=  ",SB1.B1_COD" + ENTER
    cQuery +=  ",SB1.B1_DESC" + ENTER
    cQuery +=  ",SBM.BM_GRUPO" + ENTER
    cQuery +=  " ,SBM.BM_DESC" + ENTER
    cQuery +=  "FROM " + RETSQLNAME("SB1") + ENTER
    cQuery +=  "LEFT JOIN " + RETSQLNAME("SBM") +" ON SBM.BM_FILIAL = SB1.B1_FILIAL AND SBM.BM_GRUPO = SB1.B1_GRUPO AND SBM.D_E_L_E_T_ = ' '" + ENTER
    cQuery +=  "WHERE SB1.B1_FILIAL = ' '" + ENTER
    cQuery +=  "AND SB1.D_E_L_E_T_ = ' '" + ENTER
    If !EMPTY(MV_PAR01)
        cQuery +=   "AND SB1.B1_GRUPO = '" + MV_PAR01 + "' " + ENTER
    EndIf
    cQuery += "ORDER BY SBM.BM_GRUPO, SB1.B1_COD"

    DbUseArea(.T., "TOPCONN", TcGenQry(,, cQuery), cNextAlias)

    Count to Count
    (cNextAlias)->(dbgotop())
    oReport:SetMeter(nCount)
    oSection:Init()

    While !(cNextAlias)->(Eof())
        oReport:IncMeter()
        oSection:Printline()
        if oReport:Cancel()
            Exit
        EndIf
        (cNextAlias)->(DbSkip())
    Enddo

Return

// FUNÇÃO DE PERGUNTAS
Static Function fValidPerg(cPerg)
    RpcSetEnv(;
		/* cRpcEmp  */ "99",; // Código de grupo de empresas
		/* cRpcFil  */ "01",; // Código da empresa/filial/unidade de negócio
		/* cEnvUser */ ,;
		/* cEnvPass */ ,;
		/* cEnvMod  */ "COM",; // Módulo: Compras (Sem o SIGA)
		/* cFunName */ "Teste",; // Nome da função
		/* aTables  */ {"SB1"} ;
	)

    Local aAlias := GetArea()
    Local aRegs := {}
    Local i,j

    cPerg := PadR(cPerg, Len(SB1->B1_GRUPO), " ")

    AADD(aRegs,{cPerg,"01", "Grupo","","","mv_ch1","C",2,0,0,"G","",MV_PAR01,,"","","","","","","","","","","","","","","","","","","","","","","","","12","","","","",""})

    DbSelectArea("SB1")
    SB1->(DbSetOrder(1))
    For i := 1 To LEN(aRegs)
        if !DbSeek(cPerg+aRegs[i,2])
            RecLock("SB1", .T.)
                For j := 1 to FCount()
                    FieldPut(j, aRegs[i,j])
                Next
            MsUnlock()
        Endif
    Next

RestArea(aAlias)
Return
